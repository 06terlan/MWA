1. Write a MongoDB query to display all the documents in the collection restaurants.

db.restaurants.find({});

2. Write a MongoDB query to display the fields restaurant_id, name, district and cuisine for all the documents in the collection restaurant.

db.restaurants.find({}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1});

3. Write a MongoDB query to display the fields restaurant_id, name, district and cuisine, but exclude the field _id for all the documents in the collection restaurant.

db.restaurants.find({}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

4. Write a MongoDB query to display the fields restaurant_id, name, district and zipcode, but exclude the field _id for all the documents in the collection restaurant.

db.restaurants.find({}, {_id: 0, restaurant_id: 1, name: 1, district: 1, zipcode: 1});

5. Write a MongoDB query to display all the restaurant which is in the district Bronx.

db.restaurants.find({district: "Bronx"}, {});

6. Write a MongoDB query to display the first 5 restaurant which is in the district Bronx.

db.restaurants.find({district: "Bronx"}, {}).limit(5);

7. Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in the district Bronx.

db.restaurants.find({district: "Bronx"}, {}).skip(5).limit(5);

8. Write a MongoDB query to find the restaurants which locates in coord value less than -95.754168.

db.restaurants.find({"address.coord": {$lt: -95.754168}}, {});

9. Write a MongoDB query to find the restaurants that does not prepare any cuisine of 'American' and their grade score more than 70 and coord value less than -65.754168.

db.restaurants.find({cuisine: {$not: /American/}}, {});

10. Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'Wil' as first three letters for its name.

db.restaurants.find({name: {$regex: "^Wil"}}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

11. Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'ces' as last three letters for its name.

db.restaurants.find({name: /ces$/}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

12. Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'Reg' as three letters somewhere in its name.

db.restaurants.find({name: /Reg/}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

13. Write a MongoDB query to find the restaurants which belongs to the district Bronx and prepared either American or Chinese dish.

db.restaurants.find({district: "Bronx", cuisine: /American|Chinese/}, {});

14. Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which belongs to the district Staten Island or Queens or Bronx or Brooklyn.

db.restaurants.find({district: {$in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

15. Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which are not belonging to the district Staten Island or Queens or Bronx or Brooklyn.

db.restaurants.find({district: {$not: {$in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}}, {_id: 0, restaurant_id: 1, name: 1, district: 1, cuisine: 1});

16. 